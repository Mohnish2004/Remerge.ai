{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Remerge.ai\\\\client\\\\src\\\\components\\\\CreateResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateResume() {\n  _s();\n  const params = useParams();\n  const id = params.id.toString();\n  const [form, setForm] = useState({\n    userid: id,\n    name: \"\",\n    directory: \"\",\n    content: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newResume = {\n      ...form\n    };\n    await fetch(`http://localhost:5050/specuser/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newResume)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      userid: \"\",\n      name: \"\",\n      directory: \"\",\n      content: \"\"\n    });\n    navigate(`/${id}/resumes`);\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"Directory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"directory\",\n          value: form.directory,\n          onChange: e => updateForm({\n            directory: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          children: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"content\",\n          value: form.content,\n          onChange: e => updateForm({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Resume\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 4\n  }, this);\n}\n_s(CreateResume, \"Sk0Xbqt5TabsktY7v6wTx6GVzio=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CreateResume;\nvar _c;\n$RefreshReg$(_c, \"CreateResume\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","jsxDEV","_jsxDEV","CreateResume","_s","params","id","toString","form","setForm","userid","name","directory","content","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newResume","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/Remerge.ai/client/src/components/CreateResume.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams} from \"react-router\";\r\n \r\nexport default function CreateResume() {\r\n\r\n const params = useParams();\r\n const id = params.id.toString();\r\n const [form, setForm] = useState({\r\n   userid: id,\r\n   name: \"\",\r\n   directory: \"\",\r\n   content: \"\",\r\n });\r\n\r\n \r\n\r\n\r\n const navigate = useNavigate();\r\n \r\n // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n \r\n // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n \r\n   // When a post request is sent to the create url, we'll add a new record to the database.\r\n   const newResume = { ...form };\r\n \r\n   await fetch(`http://localhost:5050/specuser/${id}`, {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newResume),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n \r\n   setForm({ userid: \"\", name: \"\", directory: \"\", content: \"\" });\r\n   navigate(`/${id}/resumes`);\r\n }\r\n \r\n // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div>\r\n     <h3>Create New Resume</h3>\r\n     <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"name\">Name</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"name\"\r\n           value={form.name}\r\n           onChange={(e) => updateForm({ name: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">Directory</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"directory\"\r\n           value={form.directory}\r\n           onChange={(e) => updateForm({ directory: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">content</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"content\"\r\n           value={form.content}\r\n           onChange={(e) => updateForm({ content: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Create Resume\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}